/**
 * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
 * SCOW is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 */

export default {
  // baseLayout
  baseLayout: {
    linkTextMis: "Management System",
  },
  // routes
  routes: {
    dashboard: "Dashboard",
    data: {
      title: "Datasets",
      private: "My Datasets",
      public: "Public Datasets",
    },
    image: {
      title: "Images",
      private: "My Images",
      public: "Public Images",
    },
    job: {
      title: "Jobs",
      createApp: "Create App",
      trainJob: "Training",
      runningJobs: "Running Jobs",
      historyJobs: "Completed Jobs",
      infer: "Inferring",
    },
    algorithm: {
      title: "Algorithms",
      private: "My Algorithms",
      public: "Public Algorithms",
    },
    model: {
      title: "Models",
      private: "My Models",
      public: "Public Models",
    },
    file: "File",
  },
  // button
  button: {
    searchButton: "Search",
    refreshButton: "Refresh",
    cancelButton: "Cancel",
    confirmButton: "Confirm",
    selectButton: "Select",
    actionButton: "Action",
    deleteButton: "Delete",
    renameButton: "Rename",
    finishButton: "Finish",
    detailButton: "Details",
    submitButton: "Submit",
    closeButton: "Close",
    startButton: "Start",
    addButton: "Add",
    editButton: "Edit",
    copyButton: "Copy",
  },
  // app
  app:{
    common:{
      share: "share",
      cancelShare: "cancel sharing",
      cancelSharing: "cancel sharing in progress",
      sharing: "sharing",
      upperShare: "Share",
      upperCancelShare: "Cancel sharing",
      upperCancelSharing: "Cancel sharing in progress",
      upperSharing: "Sharing",
    },
    dashboard:{
      infoPanes:{
        platformOverview:"Platform Overview",
        nodeCount:"NodeCount",
        total:"Total",
        running:"Running",
        idle:"Idle",
        notAvailable:"NotAvailable",
        cpuCoreCount:"CpuCoreCount",
        gpuCoreCount:"GpuCoreCount",
      },
      nodeRange:{
        job:"Job",
        running:"Running",
        pending:"Pending",
      },
      overviewTable:{
        cluster:"Cluster",
        queue:"Queue",
        nodeCount:"NodeCount",
        usageRatePercentage:"UsageRatePercentage",
        cpuUsage:"CpuUsage",
        gpuUsage:"GpuUsage",
        pendingJobCount:"PendingJobCount",
        partitionStatus:"PartitionStatus",
        available:"Available",
        notAvailable:"NotAvailable",
        platformOverview:"Platform Overview",
        contact:"There are currently no available clusters. Please try again later or contact the administrator.",
      },
    },
    algorithm:{
      private:"My Algorithm",
      public:"Public Algorithm",
      model:{
        all:"All",
        other:"Other",
      },
      algorithmTable:{
        notFound:"Algorithm not found",
        deleteSuccessfully:"Delete algorithm successfully",
        deleteFailed:"Delete algorithm failed",
        delete:"Delete algorithm",
        name:"Name",
        cluster:"Cluster",
        framework:"Algorithm framework",
        description:"Algorithm description",
        versions:"Number of versions",
        shareUser:"Sharer",
        createTime:"Creation time",
        action:"Action",
        createNewVersion:"Create new version",
        selectFramework:"Please select an algorithm framework",
        nameOrDesc:"Name or description",
      },
      algorithmVersionList:{
        notFound:"Algorithm version not found",
        submitShare:"Submit share request",
        noAuthShare:"No authority to share this version",
        shareFailed:"Sharing failed",
        cancelShare:"Submit cancel share",
        noAuthCancel:"No authority to cancel sharing this version",
        cancelShareFailed:"Cancel sharing failed",
        deleteSuccessfully:"Delete algorithm version successfully",
        deleteFailed:"Delete algorithm version failed",
        confirmedText:"The source file has been deleted, delete this record?",
        delete:"Delete algorithm version",
        versionName:"Version name",
        versionDescription:"Version description",
        createTime:"Creation time",
        action:"Action",
        check:"Check file",
        share:"Share algorithm version",
        confirmed:"Confirmed {0} algorithm version {1}",
      },
      copyPublicAlgorithmModal:{
        copySuccessfully:"Copy algorithm successfully",
        alreadyExisted:"Target algorithm name already exists",
        copy:"Copy algorithm",
        sourceName:"Source algorithm name",
        targetName:"Target algorithm name",
        cluster:"Cluster",
        versionName:"Version name",
        versionDescription:"Version description",
        address:"Copy target address",
      },
      createAndEditAlgorithmModal:{
        addSuccessfully:"Add algorithm successfully",
        alreadyExisted:"Algorithm name already exists",
        addFailed:"Add algorithm failed, please contact the administrator",
        editSuccessfully:"Modify algorithm successfully",
        notFound:"Algorithm not found",
        tryLater:"There are data being shared or canceling share, please try later",
        editFailed:"Modify algorithm failed",
        edit:"Modify algorithm",
        add:"Add algorithm",
        name:"Name",
        cluster:"Cluster",
        framework:"Algorithm framework",
        description:"Algorithm description",
      },
      CreateAndEditVersionModal:{
        addSuccessfully:"Create new version successfully",
        alreadyExisted:"Version name already exists",
        addressNotFound:"The selected folder path does not exist",
        editSuccessfully:"Modify version successfully",
        notFound:"Algorithm or algorithm version not found",
        tryLater:"There are data being shared or canceling share, please try later",
        editFailed:"Modify version failed",
        edit:"Edit version",
        add:"Create new version",
        name:"Algorithm name",
        cluster:"Cluster",
        versionName:"Version name",
        description:"Version description",
        select:"Select algorithm",
      },
    },
    dataset:{
      private:"My Dataset",
      public:"Public Dataset",
      model:{
        all:"All",
        image:"Image",
        text:"Text",
        video:"Video",
        audio:"Audio",
        other:"Other",
        ces:"Chinese word segmentation",
        da:"Data augmentation",
        ic:"Image classification",
        od:"Object detection",
      },
      copyPublicDatasetModal:{
        copySuccessfully:"Copy dataset successfully",
        alreadyExisted:"Target dataset name already exists",
        copy:"Copy dataset",
        sourceName:"Source dataset name",
        targetName:"Target dataset name",
        cluster:"Cluster",
        versionName:"Version name",
        versionDescription:"Version description",
        address:"Copy target address",
      },
      createEditDatasetModal:{
        addSuccessfully:"Add dataset successfully",
        alreadyExisted:"Dataset name already exists",
        addFailed:"Add dataset failed",
        editSuccessfully:"Edit dataset successfully",
        notFound:"Dataset not found",
        tryLater:"There are data being shared or canceling share, please try later",
        editFailed:"Edit dataset failed",
        edit:"Edit dataset",
        add:"Add dataset",
        name:"Dataset name",
        cluster:"Cluster",
        type:"Data type",
        scene:"Application scene",
        description:"Dataset description",
      },
      createEditDSVersionModal:{
        addSuccessfully:"Create new version successfully",
        alreadyExisted:"Version name already exists",
        addressNotFound:"The selected folder path does not exist",
        editSuccessfully:"Edit version successfully",
        notFound:"Dataset or dataset version not found",
        tryLater:"There are data being shared or canceling share, please try later",
        editFailed:"Edit version failed",
        edit:"Edit version",
        add:"Create new version",
        name:"Dataset name",
        cluster:"Cluster",
        versionName:"Version name",
        description:"Version description",
        select:"Select dataset",
      },
      datasetListTable:{
        notFound:"Dataset not found",
        deleteSuccessfully:"Delete successfully",
        deleteFailed:"Delete dataset failed",
        delete:"Delete dataset",
        cluster:"Cluster",
        type:"Data type",
        selectType:"Please select a data type",
        nameOrDesc:"Name or description",
        name:"Name",
        datasetType:"Dataset type",
        description:"Dataset description",
        scene:"Application scene",
        versions:"Number of versions",
        shareUser:"Sharer",
        createTime:"Creation time",
        action:"Action",
        createNewVersion:"Create new version",
      },
      datasetVersionList:{
        notFound:"Dataset version not found",
        submitShare:"Submit share request",
        noAuthShare:"No authority to share this dataset version",
        shareFailed:"Sharing dataset version failed",
        cancelShare:"Submit cancel share request",
        noAuthCancel:"No authority to cancel sharing this dataset version",
        cancelShareFailed:"Cancel sharing dataset version failed",
        deleteSuccessfully:"Delete successfully",
        deleteFailed:"Delete dataset version failed",
        confirmedText:"The source file has been deleted, delete this record?",
        delete:"Delete dataset version",
        versionName:"Version name",
        versionDescription:"Version description",
        path:"Path",
        createTime:"Creation time",
        action:"Action",
        check:"Check file",
        share:"Share dataset version",
        confirmed:"Confirmed {0} dataset version {1}",
      },
    },
    jobs:{
      createApps:{
        create:"Create",
        title:"Create Application",
      },
      historyJobs:{
        title:"Completed Jobs",
      },
      runningJobs:{
        title:"Running Jobs",
      },
      trainJobs:{
        title:"Training",
      },
      inference:{
        title:"inferring",
      },
      appSessionsTable:{
        operateFailed:"Operation failed",
        jobId:"Job ID",
        jobName:"Job name",
        jobType:"Type",
        app:"Application",
        train:"Training",
        submitTime:"Submission time",
        state:"State",
        remainingTime:"Remaining time",
        action:"Action",
        enterContainer:"Enter container",
        confirmFinish:"Are you sure you want to finish this task?",
        jobFinishReq:"Job finish request has been submitted",
        confirmCancel:"Are you sure you want to cancel this task?",
        jobCancelReq:"Job cancel request has been submitted",
        saveImage:"Save image",
        submitAgain:"Submit again",
        enterDir:"Enter directory",
        autoRefresh:"Auto refresh",
        servicePort:"Infer service port",
        infer:"Inferring",
      },
      connectToAppLink:{
        connectFailed:"Connect to app failed",
        notReady:"App not ready yet",
        connect:"Connect",
      },
      launchAppForm:{
        autoAdd:"The path of the working directory will automatically be added as a mount point",
        createSuccessfully:"Create successfully",
        createFailed:"Create failed",
        submitTrainSuccessfully:"Submit training successfully",
        submitTrainFailed:"Submit training failed",
        appJobName:"Name",
        trainConfig:"Training configuration",
        appConfig:"Application configuration",
        startImage:"Start image",
        imageText:"Ensure that the application {} is installed on the image and specify the startup command",
        useCustomImage:"Use custom image",
        image:"Image",
        privateImage:"My Image",
        publicImage:"Public Image",
        selectImage:"Please select an image or fill in the remote image address",
        remoteImageUrl:"Remote image address",
        RemoteImageUrlPlaceholder:"Please enter the remote image address",
        startCommand:"Start command",
        startCommandPlaceholder:"Start command",
        mounts:"Mount points",
        mountsPlaceholder:"Please provide mount point addresses",
        mountsDuplicate:"Mount point addresses cannot be duplicated",
        mountsText:"This path has been designated as a working directory, no need to set it as a mount point again",
        selectMounts:"Select mount points",
        addMounts:"Add mount points",
        addOther:"Add algorithm/dataset/model",
        addType:"Add type",
        algorithm:"Algorithm",
        dataset:"Dataset",
        model:"Model",
        privateAlgorithm:"My Algorithm",
        publicAlgorithm:"Public Algorithm",
        privateDataset:"My Dataset",
        publicDataset:"Public Dataset",
        privateModel:"My Model",
        publicModel:"Public Model",
        resource:"Resource",
        account:"Account",
        partition:"Queue",
        nodeCount:"Node count",
        psNodes:"PS node count",
        workerNodes:"Worker node count",
        gpuCount:"Single node GPU card count",
        coreCount:"Single node CPU core count",
        framework:"Distributed training framework",
        maxTime:"Maximum running time",
        min:"Minutes",
        totalGpus:"Total GPUs",
        totalCpus:"Total CPUs",
        totalMem:"Total memory",
        runningSetting:"Running setting",
        command:"Running command",
        imageDesc:"Image Description",
        algorithmDesc:"Algorithm Description",
        datasetDesc:"Dataset Description",
        modelDesc:"Model Description",
        selectAlgorithm:"Please select algorithm",
        selectDataset:"Please select dataset",
        selectModel:"Please select model",
      },
      LaunchInferenceForm:{
        submitSuccessfully:"Create successfully",
        submitFailed:"Create failed",
        inferConfig:"inference config",
        containerServicePort:"container service port",
        unlimitedTime:"unlimited time",
        addModel:"add model",
      },
      saveImageModal:{
        saveSuccessfully:"Save image successfully",
        saveFailed:"Save image failed",
        saveImage:"Save image",
        originalName:"Original image name",
        originalTag:"Original image tag",
        imageName:"Image name",
        imageTag:"Image tag",
        description:"Image description",
      },
      selectAppTable:{
        create:"Create",
      },
    },
    jobShell:{
      terminal:"Terminal of",
      user:"User",
      connect:"Connect to cluster",
      job:"Job of",
      refresh:"Refresh and reconnect",
    },
    files: {
      pages: {
        fileManage: "File Management",
      },
      createFileModal: {
        success: "Creation Successful",
        alreadyExist: "File with the same name already exists",
        createFile: "Create File",
        dir: "Directory of the file to be created",
        name: "File Name",
      },
      fileManager: {
        copy: "Copy",
        move: "Move",
        fail: "Failure",
        alreadyExist: "Same directory or file already exists",
        success: "Success",
        exec: "Execute",
        encounterError: "Error encountered during operation",
        confirmDelTitle: "Confirm Deletion",
        confirmDelText: "Are you sure you want to delete the selected {} items",
        item: "items",
        del: "Delete",
        delText:"Delete {} item successfully!",
        delText2:"Delete successful {0} items, failed {1} items",
        delSuccessful: "Deletion Successful",
        errorText1: "Error encountered while performing delete operation",
        cluster: "Cluster",
        fileManage: "File Management",
        upload: "Upload File",
        delSelected: "Delete Selected",
        copySelected: "Copy Selected",
        moveSelected: "Move Selected",
        pasteSelected: "Paste Here",
        ing: "In Progress",
        completed: "Completed:",
        select: "Selected",
        noDisplay: "Do not Display",
        display: "Display",
        terminal: "Open in Terminal",
        hidden: "Hidden Items",
        newFile: "New File",
        newDir: "New Directory",
        download: "Download",
        rename: "Rename",
        preview: {
          cantPreview: "File too large (maximum {}) or format not supported, please download to view",
        },
      },
      fileTable: {
        name: "File Name",
        mtime: "Modified Date",
        size: "Size",
        mode: "Permissions",
        action: "Actions",
      },
      renameModal: {
        success: "Rename Successful",
        failed: "Rename Failed, please check if you have permissions or if a file or directory "
        + "with the same name already exists",
        rename: "Rename File",
        wannaRename: "File to be renamed",
        newFileName: "New File Name",
      },
    },
    image: {
      private: "My Images",
      public: "Public Images",
      model:{
        internal:"Local files",
        external:"Remote mirror ",
      },
      copyImageModal: {
        success: "Copy Image Success",
        failed: "Copy Image Failed",
        copy: "Copy Image",
        name: "Image Name",
        tag: "Image Tag",
      },
      createEditImageModal: {
        alreadySubmit: "Image Add Task Submitted",
        notTar: "The image file is not a tar file",
        selectTar: "Please select a tar file as the image",
        addFailed: "Add Image Failed",
        editSuccess: "Edit Image Success",
        notExisted: "Image Does Not Exist",
        editFailed: "Edit Image Failed",
        editImage: "Edit Image",
        addImage: "Add Image",
        imageName: "Image Name",
        imageTag: "Image Tag",
        source: "Image Source",
        cluster: "Cluster",
        description: "Image Description",
        selectImage: "Select Image",
        imageAddress: "Image Address",
        selectImagePlaceHolder: "Please select an image file",
        inputImagePlaceHolder: "Please enter remote image address",
      },
      imageListTable: {
        delSuccess: "Delete Image Success",
        notFound: "Image Not Found",
        shareFailed: "Share Image Failed",
        cluster: "Cluster",
        nameOrTagOrDesc: "Name, Tag, or Description",
        name: "Name",
        tag: "Tag",
        source: "Image Source",
        description: "Image Description",
        shareUser: "Share User",
        status: "Status",
        processing: "Creating",
        success: "Created",
        error: "Creation Failed",
        createTime: "Creation Time",
        action: "Actions",
        cancelShare: "Cancel Share",
        share: "Share",
        image: "Image",
        confirmText:"Confirm {0} image {1}: {2}?",
        imageSuccessfully: "Image Successful",
        delImage: "Delete Image",
        delText1: "The image is being created. Are you sure you want to force delete?",
        confirmDel: "Are you sure you want to delete this image?",
        delText2: "If this image has been shared, the shared image will also be deleted.",
      },
    },
    model: {
      private: "My Models",
      public: "Public Models",
      copyPublicModelModal: {
        copySuccessfully: "Copy Model Success",
        alreadyExisted: "Target Model Name Already Exists",
        copy: "Copy Model",
        sourceName: "Source Model Name",
        targetName: "Target Model Name",
        cluster: "Cluster",
        versionName: "Version Name",
        versionDescription: "Version Description",
        algorithmVersion: "Algorithm Version",
        address: "Target Copy Address",
      },
      createAndEditModelModal: {
        addSuccessfully: "Add Model Success",
        alreadyExisted: "Model Name Already Exists",
        addFailed: "Add Model Failed",
        editSuccessfully: "Edit Model Success",
        notFound: "Model Not Found",
        tryLater: "There are data being shared or unshared, please try again later",
        editFailed: "Edit Model Failed",
        edit: "Edit Model",
        add: "Add Model",
        name: "Name",
        cluster: "Cluster",
        algorithmName: "Algorithm Name",
        algorithmFramework: "Algorithm Framework",
        description: "Model Description",
      },
      createAndEditVersionModal: {
        addSuccessfully: "Create New Version Success",
        alreadyExisted: "Version Name Already Exists",
        addressNotFound: "The selected folder path does not exist",
        addFailed: "Create New Version Failed",
        editSuccessfully: "Edit Version Success",
        notFound: "Model or Model Version Not Found",
        tryLater: "There are data being shared or unshared, please try again later",
        edit: "Edit Version",
        add: "Create New Version",
        name: "Model Name",
        cluster: "Cluster",
        versionName: "Version Name",
        description: "Version Description",
        algorithmVersion: "Algorithm Version",
        select: "Select Model",
      },
      modelTable: {
        notFound: "Model Not Found",
        deleteSuccessfully: "Delete Model Success",
        deleteFailed: "Delete Model Failed",
        delete: "Delete Model",
        name: "Name",
        cluster: "Cluster",
        description: "Model Description",
        algorithmName: "Algorithm Name",
        algorithmFramework: "Algorithm Framework",
        versions: "Number of Versions",
        owner: "Owner",
        createTime: "Creation Time",
        action: "Actions",
        createNewVersion: "Create New Version",
        nameOrDes: "Name or Description",
      },
      modelVersionList: {
        notFound: "Model Version Not Found",
        submitShare: "Submit Share Request",
        noAuthShare: "No Permission to Share This Version",
        cancelShare: "Submit Cancel Share Request",
        noAuthCancel: "No Permission to Cancel Share for This Version",
        shareFailed: "Share Cancel Failed",
        deleteSuccessfully: "Delete Model Version Success",
        deleteFailed: "Delete Model Version Failed",
        confirmedText: "The source file has been deleted. Do you want to delete this data?",
        delete: "Delete Model Version",
        versionName: "Version Name",
        versionDescription: "Version Description",
        algorithmVersion: "Algorithm Version",
        createTime: "Creation Time",
        action: "Actions",
        check: "Check File",
        share: "Share Algorithm Version",
        confirmed: "Confirm {0} algorithm version {1}",
      },
    },
    profile: {
      cPSuccessfully: "Password Changed Successfully",
      cPFailed: "Password Change Failed",
      originalPwError: "Incorrect Original Password",
      changePw: "Change Password",
      originalPw: "Old Password",
      newPw: "New Password",
      newPwPlaceholder: "Please Enter New Password",
      accountInfo: "Account Information",
      userInfo: "User Information",
      userId: "User ID",
      userName: "User Name",
      loginPw: "Login Password",
    },
  },
  component: {
    fileEditModal: {
      edit: "Edit",
      prompt: "Prompt",
      save: "Save",
      doNotSave: "Do Not Save",
      notSaved: "Not Saved",
      notSavePrompt: "The file has not been saved, do you want to save this file?",
      fileEdit: "File Edit",
      filePreview: "File Preview",
      fileLoading: "File is loading...",
      exitEdit: "Exit Edit Mode",
      failedGetFile: "Failed to get file: {}",
      cantReadFile: "Cannot read file: {}",
      saveFileFail: "File save failed: {}",
      saveFileSuccess: "File saved successfully",
      fileSizeExceeded: "File too large (maximum {}), please download and edit",
      fileFetchAbortPrompt: "Fetch {} operation was aborted",
    },
    fileSelectModal: {
      onlyHomeDir: "Operations are only allowed in the home directory",
      notAllowed: "The current file or folder cannot be selected",
      select: "Select File",
      upload: "Upload File",
      mkdir: "Create New Folder",
      depression: "Unzip File",
    },
    fileTable: {
      name: "File Name",
      mtime: "Modified Date",
      size: "Size",
      mode: "Permissions",
      action: "Actions",
    },
    accountSelector: {
      select: "Please Select Account",
      refresh: "Refresh Account List",
    },
    clusterSelector: {
      select: "Please Select Cluster",
    },
    decompressionModal: {
      success: "Decompression Successful",
      alreadyExisted: "Directory with the same name already exists",
      decompress: "Decompress File",
      confirmText: "Are you sure to decompress the file in the same folder?",
    },
    mkdirModal: {
      success: "Creation Successful",
      alreadyExisted: "Directory with the same name already exists",
      mkDir: "Create Directory",
      dirPath: "Path to the directory to be created",
      newDirName: "Directory Name",
    },
    uploadModal: {
      upload: "Upload File",
      close: "Close",
      uploadTo: "The file will be uploaded to",
      covered: "Files with the same name will be overwritten",
      maxSize: "The maximum size for a single upload file is",
      cancelUpload: "Cancel Upload",
      delRecord: "Delete Upload Record",
      success: "Upload Successful",
      failed: "Upload Failed",
      exceed: "File size exceeds",
      alreadyExisted: "File already exists",
      confirmText: "File: {} already exists, do you want to overwrite?",
      uploadText: "Click or drag files here to upload",
      singleOrMultiply: "Supports uploading single or multiple files",
    },
  },
  layout: {
    error: {
      forbiddenPage: {
        title: "Access Denied",
        subTitle: "Access Denied",
        forbidden: "Access Denied",
      },
      notAuthorizedPage: {
        needLogin: "Login Required",
        subTitle: "You are either not logged in or your session has expired. You need to log in to access this page.",
        login: "Login",
      },
      notFoundPage: {
        notFound: "Not Found",
        notFoundPage: "The page you requested does not exist.",
      },
      serverErrorPage: {
        error: "Server Error",
        sorry: "Sorry, the server encountered an error. Please refresh and try again.",
      },
    },
    darkMode: {
      system: "Follow System",
      light: "Light Mode",
      dark: "Dark Mode",
    },
  },
};
