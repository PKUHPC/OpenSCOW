# 管理系统数据库的信息。
# 如果直接使用scow-deployment提供的数据库，此部分内容不修改
db:
  host: db
  port: 3306
  user: root
  dbName: scow

# 获取作业相关配置
fetchJobs:
  # 周期性获取数据
  periodicFetch:
    # 是否开启
    enabled: true
    # 周期的cron表达式
    cron: "*/10 * * * *"

# 周期性同步scow与调度器(如slurm)账户用户封锁状态的配置
periodicSyncUserAccountBlockStatus:
  # 是否开启
  enabled: true
  # 周期的cron表达式
  cron: "0 4 * * *"

# 预定义的充值类型
predefinedChargingTypes:
  - 测试

# 创建账户时，账户名的规则。不设置就没有限制
accountNamePattern:
  # 正则表达式
  regex: "^[a-z][a-z0-9_]{2,19}$"

  # 出错时的消息，对应上面的正则表达式
  # 此文本支持国际化
  errorMessage: "要求输入长度为3-20位，由小写字母、数字、下划线组成，且以小写字母开头的字符串"

# 创建用户相关配置
createUser:

  # 是否允许用户从SCOW中创建用户
  enabled: true

  # SCOW中创建用户界面是使用内置的（builtin）或者使用外置页面（external）
  # 默认builtin
  type: builtin

  # 内置创建用户界面配置
  builtin:
    # 用户ID的格式，不设置就没有限制
    userIdPattern:
      # 正则表达式
      regex: "^[a-z][a-z0-9_]{2,19}$"

      # 出错时的消息
      # 此文本支持国际化
      errorMessage: "要求输入长度为3-20位，由小写字母、数字、下划线组成，且以小写字母开头的字符串"

  # 外置页面配置
  # external:
    # 外置页面URL
    # url: http://your-create-user-page.com

# 添加用户至账户相关配置
# addUserToAccount:
#   accountAdmin:
#     # 是否允许账户管理员添加用户至账户
#     allowed: true
#     # 是否允许账户管理员添加不存在的用户时创建用户
#     createUserIfNotExist : true

# # 集群监控配置
# clusterMonitor:
#   # 协议 + ip/域名 + 端口，默认为 http://127.0.0.1:4000
#   grafanaUrl: "http://172.16.20.125:4000"
#   # 资源状态相关配置
#   resourceStatus:
#     # 是否开启资源状态，默认不开启
#     enabled: false
#     # 是否使用代理的方式
#     proxy: false
#     # 默认面板 id,默认设置为 shZOtO4Sk
#     dashboardUid: "shZOtO4Sk"
#   # 告警日志配置
#   alarmLogs:
#     # 是否开启告警日志，默认不开启
#     enabled: false

# # 新增导航链接相关配置
# navLinks:
#   # 链接名
#   - text: "一级导航1"
#     # 链接地址，一级导航链接地址为可选填，二级导航链接地址为必填
#     url: ""
#     # 是否打开新的页面，可选填，默认值为false
#     # openInNewPage: true
#     # 自定义图标地址,可选填
#     # iconPath: ""
#     # 可以看到这个链接的用户,可选填
#     # 用户类型： user, accountUser, accountAdmin, accountOwner, tenantFinance, tenantAdmin, platformAdmin, platformFinance
#     allowedRoles: []
#     # 二级导航,可选填
#     children:
#       # 二级导航相关配置，与一级导航相同，但是url为必填配置，同时不允许再设置children
#       - text: "二级导航1"
#         url: "https://hahahaha1.1.com"
#         # openInNewPage: true
#         iconPath: ""
#         allowedRoles: [accountAdmin, accountOwner]
#       - text: "二级导航2"
#         url: "https://hahahaha1.2.com"
#         allowedRoles: [tenantAdmin, platformAdmin]
#   - text: "一级导航2"
#     url: "https://hahahaha2.com"


# 用户是否可以修改作业时限配置
# allowUserChangeJobTimeLimit: true

# # 新增自定义收费规则
# customAmountStrategies:
#   # 计费方式id，请勿重复，重复的话后面的计费方式将会覆盖前面的，
#   # 定义后不能更改，自定义计费项会记录所使用的计费方式id，并存储到数据库里，
#   # 其作用与"max-cpusAlloc-mem", "max-gpu-cpusAlloc", "gpu", "cpusAlloc"等同，
#   # 若当前生效的自定义计费项使用了某自定义计费方式id，你不能删除它，否则系统将无法启动，如要删除，请先使该计费项失效
#   - id: "strategy1"
#       # 可选，新的计量方式的显示名称，如不填写将使用id的内容
#     name: "自定义收费计算方式1"
#       # 可选，计量方式描述
#     comment: "自定义收费计算方式1，运行时间低于3分钟以下的作业不计费，大于或等于3分钟的按照gpu或cpu用量计算"
#       # 脚本文件路径，不包含config/scripts前缀，如my-strategy.js即等于config/scripts/my-strategy.js
#       # 支持commonjs或者esm，内容不支持动态修改，修改后需重启系统
#       # 自定义计量方式的文件应该默认导出一个如下签名的函数:
#       # type CustomAmountStrategyFunction = (jobInfo: JobInfo) => number | Promise<number>;
#       # JobInfo为apps/mis-server/src/bl/PriceMap.ts中的JobInfo类型，提供作业的用量信息
#     script: "my-strategy.js"

# 自定义可查询消费类型
# customChargeTypes: ["月租", "存储费"]

# #自定义消费记录中的作业相关的存储内容
# jobChargeMetadata:
#   # 可选。需要保存的作业的字段，字段参考src/entities/JobInfo
#   savedFields: ["idJob", "cluster"]

#   # 可选。定义显示出来的格式。如果不配置，直接显示上面保存的字段的信息
#   displayFormats:
#     # i18n格式，根据系统语言显示不同的信息
#     # 或字符串格式，直接显示字符串
#     # 利用 {{ 属性名 }} 使用上述savedFields中保存的属性值
#     i18n:
#       default: "集群 {{ cluster }} 的作业ID {{ idJob }} 的计费"
#       en: "The billing for  jobId {{ idJob }} of Cluster {{ cluster }}"
#       zh_cn: "集群 {{ cluster }} 的作业ID {{ idJob }} 的计费"

