name: Test, Build and Publish Projects

on:
  workflow_dispatch:
  pull_request:
    branches: [master]
  push:
    tags:
      - "**"
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  GITHUB_CR: ghcr.io
  # ALIYUN_CR: registry.cn-hangzhou.aliyuncs.com
  # ALIYUN_PROJECT_NAME: scow

jobs:
  test-version-packages:
    name: Test and version packages
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.4

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm

      - uses: bufbuild/buf-setup-action@v1
        with:
          version: "1.11.0"
          github_token: ${{ github.token }}

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Lint code
        run: pnpm lint

      - name: Generate SSH key pairs for test
        run: ssh-keygen -t rsa -q -f "$HOME/.ssh/id_rsa" -N ""

      - name: Start dev env for db testing
        run: pnpm devenv

      - name: Check running containers
        run: docker ps

      - name: Prepare dev libs and code
        run: pnpm prepareDev

      - name: Wait for ports
        uses: ifaxity/wait-on-action@master
        with:
          log: true
          verbose: true
          resource: "tcp:localhost:3306 tcp:localhost:6379 tcp:localhost:3307 tcp:localhost:389"

      - name: Run tests
        run: pnpm test:ci

      - name: Upload test converage
        uses: codecov/codecov-action@v3
        with:
          files: ./libs/auth/coverage/lcov.info,./libs/ssh/coverage/lcov.info,./libs/libconfig/coverage/lcov.info,./libs/decimal/coverage/lcov.info,./apps/auth/coverage/lcov.info,./apps/mis-server/coverage/lcov.info,./apps/portal-server/coverage/lcov.info

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        if: github.ref == 'refs/heads/master'
        with:
          version: pnpm ci:version
          publish: pnpm ci:publish
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-images:
    needs: test-version-packages
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - name: scow
            file: scow
            build_args: ""

          - name: docs
            file: docs
            build_args: BASE_PATH=/SCOW/

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.GITHUB_CR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GITHUB_CR }}/${{ github.repository }}/${{ matrix.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: ${{ matrix.build_args }}
          tags: ${{ steps.meta.outputs.tags }}
          file: docker/Dockerfile.${{ matrix.file }}
          labels: ${{ steps.meta.outputs.labels }}
          # only build arm64 in master commits
          platforms: linux/amd64${{ github.ref_type == 'tag' && ',linux/arm64' || '' }}
