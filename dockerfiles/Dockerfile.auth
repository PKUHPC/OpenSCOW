FROM node:18-alpine@sha256:0677e437543d10f6cb050d92c792a14e5eb84340e3d5b4c25a88baa723d8a4ae AS builder

RUN apk update && apk add libc6-compat python3 make gcc g++

RUN npm install -g pnpm@7.0.1

WORKDIR /app
COPY pnpm-lock.yaml ./
RUN pnpm fetch

COPY package.json pnpm-workspace.yaml .npmrc ./

COPY libs/config/package.json ./libs/config/
COPY apps/auth/package.json ./apps/auth/

# Must run twice
# First run doesn't create node_modules on libs
RUN pnpm install --offline
RUN pnpm install --offline

COPY tsconfig.json .eslintrc.json ./

COPY protos ./protos

COPY libs/config ./libs/config
COPY apps/auth ./apps/auth


RUN pnpm run build

RUN rm -rf node_modules && pnpm install -r --prod --offline

FROM node:18-alpine@sha256:0677e437543d10f6cb050d92c792a14e5eb84340e3d5b4c25a88baa723d8a4ae AS runner

WORKDIR /app
COPY --from=builder /app/node_modules ./node_modules

WORKDIR /app/libs/config
COPY --from=builder /app/libs/config/package.json .
COPY --from=builder /app/libs/config/node_modules/ ./node_modules
COPY --from=builder /app/libs/config/build/ ./build

WORKDIR /app/apps/auth
COPY apps/auth/public ./public
COPY --from=builder /app/apps/auth/package.json .
COPY --from=builder /app/apps/auth/node_modules/ ./node_modules
COPY --from=builder /app/apps/auth/build ./src

ENV NODE_ENV production

EXPOSE 5000

ENTRYPOINT [ "node", "src/index.js" ]
