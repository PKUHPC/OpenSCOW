/**
   * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
   * SCOW is licensed under Mulan PSL v2.
   * You can use this software according to the terms and conditions of the Mulan PSL v2.
   * You may obtain a copy of Mulan PSL v2 at:
   *          http://license.coscl.org.cn/MulanPSL2
   * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
   * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
   * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
   * See the Mulan PSL v2 for more details.
*/
syntax = "proto3";

package scow.operationlog;

import "google/protobuf/timestamp.proto";
import "common/money.proto";


enum OperationResult {
  UNKNOWN = 0;
  SUCCESS = 1;
  FAIL = 2;
}


message AddUserToAccount {
  string account_name = 1;
  string user_id = 2;
}

message SubmitJob {
  string account_name = 1;
  string job_id = 2;
}

message AccountSetChargeLimit {
  string account_name = 1;
  string user_id = 2;
  common.Money limit_amount = 3;
}


message CreateOperationLogRequest {
  string operator_user_id = 1;
  string operator_ip = 2;
  OperationResult operation_result = 4;

  oneof operation_event {
    AddUserToAccount  add_user_to_account = 6;
    SubmitJob submit_job = 7;
    AccountSetChargeLimit account_set_charge_limit = 8;

    // TODO
  }
}


message OperationLog {
  string operator_user_id = 1;
  string operator_ip = 2;
  google.protobuf.Timestamp operation_time = 3;
  OperationResult operation_result = 5;

  oneof operation_event {
    AddUserToAccount  add_user_to_account = 6;
    SubmitJob submit_job = 7;
    AccountSetChargeLimit account_set_charge_limit = 8;
    // TODO
  }

}

message CreateOperationLogResponse {
}

message OperationLogFilter {
  // if length === 0, get from all operators
  repeated string operator_user_ids = 1;
  // 如果两者都不存在，则筛选特定用户的操作日志
  // 如果存在，则表示筛选特定账户的操作日志
  optional string operation_target_account_name = 2;
  // 如果存在，则表示筛选特定租户的操作日志
  optional string operation_target_tenant_name = 3;

  // 筛选项如果为空，则返回所有
  optional google.protobuf.Timestamp start_time = 4;
  optional google.protobuf.Timestamp end_time = 5;
  optional OperationResult operation_result = 7;
}

message GetOperationLogsRequest {
  OperationLogFilter filter = 1;
  uint32 page = 2;
  // if undefined or 0, page_size is 10
  optional uint64 page_size = 3;
}

message GetOperationLogsResponse {
  repeated OperationLog results = 1;
  uint32 total_count = 2;
}


service OperationLogService {
  rpc CreateOperationLog(CreateOperationLogRequest) returns (CreateOperationLogResponse);
  rpc GetOperationLogs(GetOperationLogsRequest) returns (GetOperationLogsResponse);

}
