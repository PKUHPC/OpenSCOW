/**
   * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
   * SCOW is licensed under Mulan PSL v2.
   * You can use this software according to the terms and conditions of the Mulan PSL v2.
   * You may obtain a copy of Mulan PSL v2 at:
   *          http://license.coscl.org.cn/MulanPSL2
   * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
   * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
   * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
   * See the Mulan PSL v2 for more details.
*/
syntax = "proto3";

package scow.operationlog;

import "google/protobuf/timestamp.proto";
import "common/money.proto";


enum OperationResult {
  UNKNOWN = 0;
  SUCCESS = 1;
  FAIL = 2;
}

message Login {

}
message Logout {

}

message SubmitJob {
  string account_name = 1;
  uint32 job_id = 2;
}

message EndJob {
  uint32 job_id = 1;
}

message UserSetJobTimeLimit {
  string account_name = 1;
  uint32 job_id = 2;
  common.Money limit_amount = 3;
}

message AddJobTemplate {
  string job_template_id = 1;
}

message DeleteJobTemplate {
  string job_template_id = 1;
}

message UpdateJobTemplate {
  string job_template_id = 1;
  string new_job_template_id = 2;
}

message ShellLogin {
  string cluster_id = 1;
  string login_node = 2;
}

message CreateDesktop {
  string desktop_name = 1;
  string wm = 2;
}

message DeleteDesktop {
  uint32 desktop_id = 1;
  string login_node = 2;
}

message CreateApp {
  string account_name = 1;
  uint32 job_id = 2;
}

message CreateFile {
  string cluster_id = 1;
  string path = 2;
}

message DeleteFile {
  string cluster_id = 1;
  string path = 2;
}

message UploadFile {
  string cluster_id = 1;
  string path = 2;
}

message CreateDirectory {
  string cluster_id = 1;
  string path = 2;
}

message DeleteDirectory {
  string cluster_id = 1;
  string path = 2;
}


message MoveFileItem {
  string cluster_id = 1;
  string from_path = 2;
  string to_path = 3;
}


message CopyFileItem {
  string cluster_id = 1;
  string from_path = 2;
  string to_path = 3;
}

message AccountSetJobTimeLimit {
  string account_name = 1;
  uint32 job_id = 2;
  common.Money limit_amount = 3;
}

message CreateUser {
  string tenant_name = 1;
  // 如果是账户管理员创建则有account_name, 否则不存在
  optional string account_name = 2;
  string user_id = 3;
}

message AddUserToAccount {
  string account_name = 1;
  string user_id = 2;
}

message RemoveUserFromAccount {
  string account_name = 1;
  string user_id = 2;
}

message SetAccountAdmin {
  string account_name = 1;
  string user_id = 2;
}

message UnsetAccountAdmin {
  string account_name = 1;
  string user_id = 2;
}

message BlockUser {
  string account_name = 1;
  string user_id = 2;
}

message UnblockUser {
  string account_name = 1;
  string user_id = 2;
}

message AccountSetChargeLimit {
  string account_name = 1;
  string user_id = 2;
  common.Money limit_amount = 3;
}

message TenantSetJobTimeLimit {
  string tenant_name = 1;
  string account_name = 2;
  uint32 job_id = 3;
  common.Money limit_amount = 4;
}

message SetTenantBilling {
  string tenant_name = 1;
  // 集群_分区_QOS
  string path = 2;
  // 计量方式
  string amount = 3;
  common.Money price = 4;
}

//TODO: 租户创建用户和账户创建用户需不需要区分

message SetTenantAdmin {
  string tenant_name = 1;
  string user_id = 2;
}

message UnsetTenantAdmin {
  string tenant_name = 1;
  string user_id = 2;
}

message SetTenantFinance {
  string tenant_name = 1;
  string user_id = 2;
}

message UnsetTenantFinance {
  string tenant_name = 1;
  string user_id = 2;
}

message TenantChangePassword {
  string tenant_name = 1;
  string user_id = 2;
}

message CreateAccount {
  string tenant_name = 1;
  string account_name = 2;
}

message AddAccountToWhitelist {
  string tenant_name = 1;
  string account_name = 2;
}

message RemoveAccountFromWhitelist {
  string tenant_name = 1;
  string account_name = 2;
}

message AccountPay {
  string tenant_name = 1;
  string account_name = 2;
  common.Money amount = 3;
}

message ImportUsers {
  string tenant_name = 1;
  message ImportAccount {
    string account_name = 1;
    repeated string user_ids = 2;
  }
  ImportAccount import_accounts = 2;
}

message SetPlatformAdmin {
  string user_id = 1;
}

message UnsetPlatformAdmin {
  string user_id = 1;
}

message SetPlatformFinance {
  string user_id = 1;
}

message UnsetPlatformFinance {
  string user_id = 1;
}

message PlatformChangePassword {
  string user_id = 2;
}

message SetPlatformBilling {
  // 集群_分区_QOS
  string path = 1;
  // 计量方式
  string amount = 2;
  common.Money price = 3;
}

message CreateTenant {
  string tenant_name = 1;
}

message PlatformSetTenantBilling {
  string tenant_name = 1;
  // 集群_分区_QOS
  string path = 2;
  // 计量方式
  string amount = 3;
  common.Money price = 4;
}

message TenantPay {
  string tenant_name = 1;
  common.Money amount = 2;
}


message CreateOperationLogRequest {
  string operator_user_id = 1;
  string operator_ip = 2;
  OperationResult operation_result = 3;
  oneof operation_event {
    Login login = 4;
    Logout logout = 5;
    SubmitJob submit_job = 6;
    EndJob end_job = 7;
    UserSetJobTimeLimit user_set_job_time_limit = 8;
    AddJobTemplate add_job_template = 9;
    DeleteJobTemplate delete_job_template = 10;
    UpdateJobTemplate update_job_template = 11;
    ShellLogin shell_login = 12;
    CreateDesktop create_desktop = 13;
    DeleteDesktop delete_desktop = 14;
    CreateApp create_app = 15;
    CreateFile create_file = 16;
    DeleteFile delete_file = 17;
    UploadFile upload_file = 18;
    CreateDirectory create_directory = 19;
    DeleteDirectory delete_directory = 20;
    MoveFileItem move_file_item = 21;
    CopyFileItem copy_file_item = 22;
    AccountSetJobTimeLimit account_set_job_time_limit = 23;
    CreateUser create_user = 24;
    AddUserToAccount add_user_to_account = 25;
    RemoveUserFromAccount remove_user_from_account = 26;
    SetAccountAdmin set_account_admin = 27;
    UnsetAccountAdmin unset_account_admin = 28;
    BlockUser block_user = 29;
    UnblockUser unblock_user = 30;
    AccountSetChargeLimit account_set_charge_limit = 31;
    TenantSetJobTimeLimit tenant_set_job_time_limit = 32;
    SetTenantBilling set_tenant_billing = 33;
    SetTenantAdmin set_tenant_admin = 34;
    UnsetTenantAdmin unset_tenant_admin = 35;
    SetTenantFinance set_tenant_finance = 36;
    UnsetTenantFinance unset_tenant_finance = 37;
    TenantChangePassword tenant_change_password = 38;
    CreateAccount create_account = 39;
    AddAccountToWhitelist add_account_to_whitelist = 40;
    RemoveAccountFromWhitelist remove_account_from_whitelist = 41;
    AccountPay account_pay = 42;
    ImportUsers import_users = 43;
    SetPlatformAdmin set_platform_admin = 44;
    UnsetPlatformAdmin unset_platform_admin = 45;
    SetPlatformFinance set_platform_finance = 46;
    UnsetPlatformFinance unset_platform_finance = 47;
    PlatformChangePassword platform_change_password = 48;
    SetPlatformBilling set_platform_billing = 49;
    CreateTenant create_tenant = 50;
    PlatformSetTenantBilling platform_set_tenant_billing = 51;
    TenantPay tenant_pay = 52;
  }
}


message OperationLog {
  string operator_user_id = 1;
  string operator_ip = 2;
  google.protobuf.Timestamp operation_time = 3;
  OperationResult operation_result = 4;
  oneof operation_event {
    Login login = 5;
    Logout logout = 6;
    SubmitJob submit_job = 7;
    EndJob end_job = 8;
    UserSetJobTimeLimit user_set_job_time_limit = 9;
    AddJobTemplate add_job_template = 10;
    DeleteJobTemplate delete_job_template = 11;
    UpdateJobTemplate update_job_template = 12;
    ShellLogin shell_login = 13;
    CreateDesktop create_desktop = 14;
    DeleteDesktop delete_desktop = 15;
    CreateApp create_app = 16;
    CreateFile create_file = 17;
    DeleteFile delete_file = 18;
    UploadFile upload_file = 19;
    CreateDirectory create_directory = 20;
    DeleteDirectory delete_directory = 21;
    MoveFileItem move_file_item = 24;
    CopyFileItem copy_file_item = 27;
    AccountSetJobTimeLimit account_set_job_time_limit = 29;
    CreateUser create_user = 30;
    AddUserToAccount add_user_to_account = 31;
    RemoveUserFromAccount remove_user_from_account = 32;
    SetAccountAdmin set_account_admin = 33;
    UnsetAccountAdmin unset_account_admin = 34;
    BlockUser block_user = 35;
    UnblockUser unblock_user = 36;
    AccountSetChargeLimit account_set_charge_limit = 37;
    TenantSetJobTimeLimit tenant_set_job_time_limit = 38;
    SetTenantBilling set_tenant_billing = 39;
    SetTenantAdmin set_tenant_admin = 40;
    UnsetTenantAdmin unset_tenant_admin = 41;
    SetTenantFinance set_tenant_finance = 42;
    UnsetTenantFinance unset_tenant_finance = 43;
    TenantChangePassword tenant_change_password = 44;
    CreateAccount create_account = 45;
    AddAccountToWhitelist add_account_to_whitelist = 46;
    RemoveAccountFromWhitelist remove_account_from_whitelist = 47;
    AccountPay account_pay = 48;
    ImportUsers import_users = 49;
    SetPlatformAdmin set_platform_admin = 50;
    UnsetPlatformAdmin unset_platform_admin = 51;
    SetPlatformFinance set_platform_finance = 52;
    UnsetPlatformFinance unset_platform_finance = 53;
    PlatformChangePassword platform_change_password = 54;
    SetPlatformBilling set_platform_billing = 55;
    CreateTenant create_tenant = 56;
    PlatformSetTenantBilling platform_set_tenant_billing = 57;
    TenantPay tenant_pay = 58;
  }

}

message CreateOperationLogResponse {
}

message OperationLogFilter {
  // if length === 0, get from all operators
  repeated string operator_user_ids = 1;
  // 如果存在，则表示筛选特定账户的操作日志
  optional string operation_target_account_name = 2;

  // 筛选项如果为空，则返回所有
  optional string operation_type = 3;
  optional google.protobuf.Timestamp start_time = 4;
  optional google.protobuf.Timestamp end_time = 5;
  optional OperationResult operation_result = 6;
}

message GetOperationLogsRequest {
  OperationLogFilter filter = 1;
  uint32 page = 2;
  // if undefined or 0, page_size is 10
  optional uint64 page_size = 3;
}

message GetOperationLogsResponse {
  repeated OperationLog results = 1;
  uint32 total_count = 2;
}


service OperationLogService {
  rpc CreateOperationLog(CreateOperationLogRequest) returns (CreateOperationLogResponse);
  rpc GetOperationLogs(GetOperationLogsRequest) returns (GetOperationLogsResponse);

}
