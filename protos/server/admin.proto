/**
 * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
 * SCOW is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 */

syntax = "proto3";

package scow.server;

import "google/protobuf/timestamp.proto";

enum ChangeStorageQuotaMode {
  INCREASE = 0;
  DECREASE = 1;
  SET = 2;
}

message PlatFormAdminInfo {
  string user_id = 1;
  string user_name = 2;
}

message PlatFormFinancialStaffInfo {
  string user_id = 1;
  string user_name = 2;
}

message ChangeStorageQuotaRequest {
  string user_id = 1;
  string cluster = 2;
  ChangeStorageQuotaMode mode = 3;
  uint64 value = 4;
}

// INVALID_ARGUMENT: change value is not valid.
// NOT_FOUND: user_id or cluster is not found
message ChangeStorageQuotaResponse {
  uint64 current_quota = 1;
}

message QueryStorageQuotaRequest {
  string user_id = 1;
  string cluster = 2;
}

// NOT_FOUND: cluster or userId is not found.
message QueryStorageQuotaResponse {
  uint64 current_quota = 1;
}

message ImportUsersData {
  message AccountInfo {
    string account_name = 1;
    repeated UserInAccount users = 2;
    // owner is undefined while account has existed
    optional string owner = 3;
    bool blocked = 4;
  }

  repeated AccountInfo accounts = 1;
}

message ImportUsersRequest {
  ImportUsersData data = 1;
  bool whitelist = 2;
}

// INVAD_ARGUMENT: the data format is not acceptable
message ImportUsersResponse {
  uint32 user_count = 1;
  uint32 account_count = 2;
  uint32 users_without_name = 3;
}

message UserInAccount {
  string user_id = 1;
  string user_name = 2;
  bool blocked = 3;
}

message ClusterAccountInfo {
  enum ImportStatus {
    EXISTING = 0;
    NOT_EXISTING = 1;
    HAS_NEW_USERS = 2;
  }
  string account_name = 1;
  repeated UserInAccount users = 2;
  optional string owner = 3;
  ImportStatus import_status = 4;
  bool blocked = 5;
}

message GetClusterUsersRequest {
  string cluster = 1;
}

message GetClusterUsersResponse {
  repeated ClusterAccountInfo accounts = 1;
}

message GetFetchInfoRequest {
}

message GetFetchInfoResponse {
  bool fetch_started = 1;
  string schedule = 2;
  optional google.protobuf.Timestamp last_fetch_time = 3;
}

message SetFetchStateRequest {
  bool started = 1;
}
message SetFetchStateResponse {
}

message FetchJobsRequest {
}
message FetchJobsResponse {
  uint32 new_jobs_count = 1;
}

message GetSyncBlockStatusInfoRequest {
}
message GetSyncBlockStatusInfoResponse {
  bool sync_started = 1;
  string schedule = 2;
  optional google.protobuf.Timestamp last_sync_time = 3;
}

message SetSyncBlockStatusStateRequest {
  bool started = 1;
}
message SetSyncBlockStatusStateResponse {
}

message BlockedFailedUserAccount {
  string account_name = 1;
  string user_id= 2;
}
message SyncBlockStatusRequest{
}
message SyncBlockStatusResponse{
  repeated string blocked_failed_accounts = 1;
  repeated BlockedFailedUserAccount blocked_failed_user_accounts = 2;
  repeated string unblocked_failed_accounts = 3;
}

message UpdateBlockStatusRequest{
}
message UpdateBlockStatusResponse{
}

message GetAdminInfoRequest {
}

message GetAdminInfoResponse {
  repeated PlatFormAdminInfo platform_admins = 1;
  uint64 tenant_count = 2;
  uint64 account_count = 3;
  uint64 user_count = 4;
  repeated PlatFormFinancialStaffInfo platform_financial_staff = 5;
}

message GetStatisticInfoRequest {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
}

message GetStatisticInfoResponse {
  uint64 total_user = 1;
  uint64 total_account = 2;
  uint64 total_tenant = 3;
  uint64 new_user = 4;
  uint64 new_account = 5;
  uint64 new_tenant = 6;
}

service AdminService {
  rpc ChangeStorageQuota(ChangeStorageQuotaRequest)
      returns (ChangeStorageQuotaResponse);
  rpc QueryStorageQuota(QueryStorageQuotaRequest)
      returns (QueryStorageQuotaResponse);
  rpc ImportUsers(ImportUsersRequest) returns (ImportUsersResponse);
  rpc GetClusterUsers(GetClusterUsersRequest) returns (GetClusterUsersResponse);
  rpc GetFetchInfo(GetFetchInfoRequest) returns (GetFetchInfoResponse);
  rpc SetFetchState(SetFetchStateRequest) returns (SetFetchStateResponse);
  rpc FetchJobs(FetchJobsRequest) returns (FetchJobsResponse);
  rpc UpdateBlockStatus(UpdateBlockStatusRequest)
    returns (UpdateBlockStatusResponse);
  rpc GetAdminInfo(GetAdminInfoRequest) returns (GetAdminInfoResponse) {
    option deprecated = true;
  };

  rpc GetStatisticInfo(GetStatisticInfoRequest)
    returns (GetStatisticInfoResponse);
  rpc GetSyncBlockStatusInfo(GetSyncBlockStatusInfoRequest) returns (GetSyncBlockStatusInfoResponse);
  rpc SetSyncBlockStatusState(SetSyncBlockStatusStateRequest) returns (SetSyncBlockStatusStateResponse);
  rpc SyncBlockStatus(SyncBlockStatusRequest) returns (SyncBlockStatusResponse);
}
