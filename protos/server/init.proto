/**
 * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
 * SCOW is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 */

syntax = "proto3";

package scow.server;

message QuerySystemInitializedRequest {
}
message QuerySystemInitializedResponse {
  bool initialized = 1;
}

message CreateInitAdminRequest {
  string user_id = 1;
  string name = 2;
  string email = 3;
  string password = 4;
}
message CreateInitAdminResponse {
  bool created_in_auth = 1;
}

message CompleteInitRequest {
}

message CompleteInitResponse {
}

message SetAsInitAdminRequest {
  string user_id = 1;
}

message SetAsInitAdminResponse {
}

message UnsetInitAdminRequest {
  string user_id = 1;
}
message UnsetInitAdminResponse {
}
message UserExistsRequest {
  string user_id = 1;
}
message UserExistsResponse {
  bool exists_in_scow = 1;
  optional bool exists_in_auth = 2;
}


service InitService {
  rpc QuerySystemInitialized(QuerySystemInitializedRequest)
      returns (QuerySystemInitializedResponse);

  rpc CreateInitAdmin(CreateInitAdminRequest)
      returns (CreateInitAdminResponse);

  // ALREADY_EXISTS: already initialized
  rpc CompleteInit(CompleteInitRequest) returns (CompleteInitResponse);

  // Set a user as PLATFORM_ADMIN and default tenant's TENANT_ADMIN
  // NOT_FOUND: the user is not found in default tenant
  rpc SetAsInitAdmin(SetAsInitAdminRequest) returns (SetAsInitAdminResponse);

  // Unset a user's PLATFORM_ADMIN and default tenant's TENANT_ADMIN role
  // NOT_FOUND: the user is not found in default tenant
  rpc UnsetInitAdmin(UnsetInitAdminRequest) returns (UnsetInitAdminResponse);
  rpc UserExists(UserExistsRequest) returns (UserExistsResponse);

}
