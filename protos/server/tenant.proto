/**
 * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
 * SCOW is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 */

syntax = "proto3";

package scow.server;

import "common/money.proto";
import "google/protobuf/timestamp.proto";

message GetTenantInfoRequest {
  string tenant_name = 1;
}

// NOT_FOUND: tenant is not found
message GetTenantInfoResponse {
  common.Money balance = 1;
  uint32 account_count = 2;
  uint32 user_count = 3;
  common.Money default_account_block_threshold = 4;

  message AdminInfo {
    string user_id = 1;
    string user_name = 2;
  }

  repeated AdminInfo admins = 5;

  message FinancialStaffInfo {
    string user_id = 1;
    string user_name = 2;
  }
  repeated FinancialStaffInfo financial_staff = 6;

}

message GetTenantsRequest {
}
message GetTenantsResponse {
  repeated string names = 1;
}


message PlatformTenantsInfo {
  uint32 tenant_id = 1;
  string tenant_name = 2;
  uint32 user_count = 3;
  uint32 account_count = 4;
  common.Money balance = 5;
  google.protobuf.Timestamp create_time = 6;
}
message GetAllTenantsRequest {
}
message GetAllTenantsResponse {
  uint32 total_count = 1;
  repeated PlatformTenantsInfo platform_tenants = 2;
}

message CreateTenantRequest {
  string tenant_name=1;
  string user_id = 2;
  string user_name = 3;
  string user_email = 4;
  string user_password = 5;
}

// ALREADY_EXISTS: tenant or user already exists
message CreateTenantResponse {
  // The id of the new tenant
  uint32 tenant_id = 1;
  // The id of the new tenant's admin user
  uint32 user_id = 2;
  bool created_in_auth = 3;

}

message SetDefaultAccountBlockThresholdRequest {
  string tenant_name = 1;
  common.Money block_threshold_amount = 2;
}

message SetDefaultAccountBlockThresholdResponse {

}

service TenantService {
  rpc GetTenantInfo(GetTenantInfoRequest) returns (GetTenantInfoResponse);
  rpc GetTenants(GetTenantsRequest) returns (GetTenantsResponse);
  rpc GetAllTenants(GetAllTenantsRequest) returns (GetAllTenantsResponse);
  rpc CreateTenant(CreateTenantRequest) returns (CreateTenantResponse);
  rpc SetDefaultAccountBlockThreshold(SetDefaultAccountBlockThresholdRequest) returns (SetDefaultAccountBlockThresholdResponse);
}
