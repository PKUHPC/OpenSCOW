/**
 * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
 * SCOW is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 */

syntax = "proto3";

package scow.server.hook;

import "common/money.proto";
import "google/protobuf/timestamp.proto";

message AccountBlocked {
  string account_name = 1;
  string tenant_name = 2;
}

message AccountUnblocked {
  string account_name = 1;
  string tenant_name = 2;
}

message AccountCreated {
  string account_name = 1;
  string tenant_name = 2;
  string owner_id = 3;
  optional string comment = 4;
}

message UserBlockedInAccount {
  string user_id = 1;
  string account_name = 2;
}

message UserUnblockedInAccount {
  string user_id = 1;
  string account_name = 2;
}

message UserCreated {
  string user_id = 1;
  string tenant_name = 2;
}

message UserAdded {
  string user_id = 1;
  string tenant_name = 2;
}

message AccountPaid {
  string account_name = 1;
  common.Money amount = 2;
}

message TenantPaid {
  string tenant_name = 1;
  common.Money amount = 2;
}

message JobSaved {
  uint32 job_id = 1;
  string job_name = 2;
  string account = 3;
  string user = 4;
  string partition = 5;
  string qos = 6;

  // the number of CPUs requested by job
  int32 cpus_req = 7;
  // memory requested by job
  int64 mem_req = 8;
  // the number of nodes requested by job
  int32 nodes_req = 9;
  google.protobuf.Timestamp submit_time = 10;
  // name of the file that stdout outputs to, relative to the working directory.
  optional string stdout_path = 11;
  // name of the file that stderr outputs to, relative to the working directory.
  optional string stderr_path = 12;
  optional google.protobuf.Timestamp start_time = 13;
  optional int64 elapsed_seconds = 14;
  // indicates why is the job in this state
  optional string reason = 15;
  optional string node_list = 16;
  // the number of GPUs used by job
  optional int32 gpus_alloc = 17;
  // the number of CPUs used by job
  optional int32 cpus_alloc = 18;
  // memory used by job
  optional int64 mem_alloc_mb = 19;
  // the number of nodes used by job
  optional int32 nodes_alloc = 20;
  optional google.protobuf.Timestamp end_time = 21;

  optional string tenant = 22;
  common.Money account_price = 23;
  common.Money tenant_price = 24;
}

message OnEventRequest {
  message Metadata {
    google.protobuf.Timestamp time = 1;
  }

  Metadata metadata = 1;

  oneof event {
    AccountBlocked account_blocked = 2;
    AccountUnblocked account_unblocked = 3;
    AccountCreated account_created = 4;
    UserBlockedInAccount user_blocked_in_account = 5;
    UserUnblockedInAccount user_unblocked_in_account = 6;
    UserCreated user_created = 7;
    UserAdded user_added = 8;
    AccountPaid account_paid = 9;
    TenantPaid tenant_paid = 10;
    JobSaved job_saved = 11;
  }
}
message OnEventResponse {

}

service HookService {
  rpc OnEvent (OnEventRequest) returns (OnEventResponse);
}
