# Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
# SCOW is licensed under Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#          http://license.coscl.org.cn/MulanPSL2
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PSL v2 for more details.

version: "3"

services:
  db:
    image: ccimage.pku.edu.cn/mirror/library/mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - "db:/var/lib/mysql"
    ports:
      - 3306:3306

  redis:
    image: ccimage.pku.edu.cn/mirror/library/redis:alpine
    ports:
      - 6379:6379

  ssh-server:
    image: alpine-ssh
    build:
      context: ssh-server
      args:
        HTTPS_PROXY: ${HTTPS_PROXY}
    ports:
      - 22222:22
    environment:
      # pkuhpc-k8s-runners uses docker-in-docker configuration
      # It means the container running the workflow job is not the one the docker daemon is running
      # So, the docker daemon where the dev env is running has no access to the filesystem of the container running the workflow job
      # Therefore, we need to pass the public key value (not just a path) to the ssh-server container
      # The same applies to all other containers that need to access the files in the workflow job container.
      # Luckily there is none for now, but we need to keep this in mind.
      SSH_AUTHORIZED_PUBLIC_KEY: ${SSH_AUTHORIZED_PUBLIC_KEY}
    volumes:
      - $HOME/.ssh/id_rsa.pub:/id_rsa.pub

  ldap:
    image: ldaptest
    build:
      context: ..
      dockerfile: dev/ldap/Dockerfile
    ports:
      - 389:389
    volumes:
      - ldap:/var/lib/ldap
    ulimits:
      nofile:
        soft: 10240
        hard: 10240

  ldapadmin:
    image: ccimage.pku.edu.cn/mirror/osixia/phpldapadmin
    ports:
      - 3890:80
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ldap://localhost:389
      PHPLDAPADMIN_HTTPS: false

  test-adapter-hpc00:
    image: test-adapter
    build:
      context: ..
      dockerfile: dev/test-adapter/Dockerfile
      args:
        HTTPS_PROXY: ${HTTPS_PROXY}
    ports:
      - 6000:6000
    environment:
      CLUSTER_ID: hpc00
      PORT: 6000

  test-adapter-hpc01:
    image: test-adapter
    build:
      context: ..
      dockerfile: dev/test-adapter/Dockerfile
      args:
        HTTPS_PROXY: ${HTTPS_PROXY}
    ports:
      - 6001:6001
    environment:
      CLUSTER_ID: hpc01
      PORT: 6001

  test-adapter-hpc02:
    image: test-adapter
    build:
      context: ..
      dockerfile: dev/test-adapter/Dockerfile
      args:
        HTTPS_PROXY: ${HTTPS_PROXY}
    ports:
      - 6002:6002
    environment:
      CLUSTER_ID: hpc02
      PORT: 6002

networks:
  default:
    name: scow

volumes:
  db:
  ldap:
